{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","title","year","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","console","log","this","then","json","data","setState","current","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iSAmCeA,MA/Bf,YAA+D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAChD,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAcC,IAAKH,EAAQI,IAAKP,EAAOA,MAAOA,GAApCD,GACV,sBAAKM,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BL,IAC9B,oBAAIK,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,gBAAd,SAEQD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACP,oBAAgBL,UAAU,gBAA1B,SACKI,GADIC,QAMrB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCmEDC,G,wDA/Db,aAAc,IAAD,8BACX,gBAKFC,MAAQ,CACNC,WAAW,EACXC,OAAQ,IARG,EAWbC,UAXa,sBAWD,sBAAAC,EAAA,sEACGC,IAAMC,IAAI,4DADb,mFATVC,QAAQC,IAAI,SAFD,E,qDAeb,WAAoB,IAAD,OACjBC,KAAKN,YAAYO,MAAK,SAACC,GACrB,IAAwBT,EAAcS,EAA9BC,KAAQA,KAAQV,OACxB,EAAKW,UAAS,SAACC,GAAD,MAAc,CAC1Bb,WAAW,EACXC,kB,gCAKN,WACEK,QAAQC,IAAI,wB,kCAGd,WACED,QAAQC,IAAI,0B,oBAGd,WACE,MAA8BC,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASV,UAAU,YAAnB,SAEIS,EACE,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAoB,GAAK,OACf,cAAC,EAAD,CAEE7B,GAAI6B,EAAM7B,GACVE,KAAM2B,EAAM3B,KACZD,MAAO4B,EAAM5B,MACbE,QAAS0B,EAAM1B,QACfC,OAAQyB,EAAMC,mBACdzB,OAAQwB,EAAMxB,QANTwB,EAAM7B,e,GA/CX+B,IAAMC,YCnBxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.17b821fa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\n\r\nfunction Movie ({ id, title, year, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img key={id} src={poster} alt={title} title={title} />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {\r\n                        genres.map((genre, index) => \r\n                            <li key={index} className=\"genres__genre\">\r\n                                {genre}\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n\n/**\n * React.Component 가 갖고 있는 function\n * - Life Cycle function ( render() 전 호출 )\n *    -- Mounting : \"태어나는 것\"과 같아\n *          * constructor()\n *          * static getDerivedStateFromProps() -패스\n *          * render()\n *          * componentDidMount()\n *    -- Updating : 일반적인 업데이트를 의미\n *           * static getDerivedStateFromProps()\n *           * shouldComponentUpdate() -패스 ( 업데이트 할지 말지 결정하는 아이 )\n *           * render()\n *           * getSnapshotBeforeUpdate() -패스 ( 노마드 인생에 사용한 적 없다 함 ㅋ )\n *           * componentDidUpdate()\n *    -- UnMounting : component가 죽는걸 의미 ( 페이지가 바뀔때 )\n *            * componentWillUnmount()\n * - render()\n*/\nclass App extends React.Component{\n  constructor(){\n    super();\n    console.log(\"Hello\");\n  }\n\n  // state 을 사용 하려면 React.Component 안에서 사용해야 함\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMovies = async() => {\n    return await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n  }\n\n  componentDidMount(){\n    this.getMovies().then((json) => {\n      const { data: { data: { movies } }} = json; // ES6\n      this.setState((current) => ({\n        isLoading: false,\n        movies,\n      }));\n    });\n  }\n\n  componentDidUpdate(){\n    console.log(\"componentDidUpdate\");\n  }\n\n  componentWillUnmount(){\n    console.log(\"componentWillUnmount\");\n  }\n  \n  render(){\n    const { isLoading, movies } = this.state; // ES6\n    return (\n      <section className=\"container\">\n        {\n          isLoading ? (\n            <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n          ) : (\n            <div className=\"movies\">\n              {movies.map(movie =>\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              )}\n            </div>\n          )\n        }\n      </section>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}